#!/usr/bin/env ruby
require 'open-uri'
require 'optparse'
require 'net/http'
require 'uri'

# so you can tell the difference between herokuise and general output
def log(bit)
  puts "\033[35m#{bit} \033[0m"
end

options = {}
ARGV << "-h" if ARGV.empty?

optparse = OptionParser.new do|opts|
  opts.banner = "Usage: herokuise [project_name] [options] this will create a github repo and set up a sinatra app serving static content on heroku"

  options[:nogithub] = false
  opts.on( '-ng', '--no-github', 'Don\'t create a github repository' ) do
    options[:nogithub] = true
  end

  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end
end

optparse.parse!

appname = ARGV[0]
if !appname
  log opts
  appname = "nellbot"
  Process.exit
end

github_user = `git config --global  github.user`
if github_user == ""
  log "You need to set up your github gem username/password, type in"
  log "  ->  github config"
  Process.exit
end

# test for the heroku app existing already
page = Net::HTTP.get( URI.parse("http://#{appname}.heroku.com/") ).to_s
if !page.include? "No such app"
  log "Heroku app http://#{appname}.heroku.com already exists"
  Process.exit
end


#kill the old folder if it exists
if File.exists? appname
  `rm -r #{appname}`
end

log ""
log "Herokuising ------------"
log ""
log "Creating #{appname}"


if options[:nogithub] == false
  log "Creating Github repo"
  `github create #{appname}`
else
  log "Creating folder and repo"
  `mkdir #{appname}`  
  `git init #{appname}`
end

log "Making folders"
Dir.mkdir appname + "/public"

log "Making Files"
`echo "sinatra" > #{appname}/.gems`

`echo "require 'app' 
run Sinatra::Application" >  #{appname}/config.ru`

`echo "require 'rubygems' 
require 'sinatra' 

get '/' do 
  redirect '/index.html' 
end" > #{appname}/app.rb`


log "Pulling down Paul Irish's HTML5 Boilerplate code"
`git clone http://github.com/paulirish/html5-boilerplate.git #{appname}/public`

# and not get any git issues
`rm -rf #{appname}/public/.git`

# the images folder in the boilerplate has a .gitignore
# that often confuses me
`find . -name .gitignore -exec rm {} \;`

#switch to the new app directory
Dir.chdir( appname )

log "Commiting to Github"

`git add .`
`git add .gems`

`git commit -m "initial import from orta-herokuize"`

if options[:nogithub] == false
  log "Pushing to Github"
  `git push`
end

log "Creating heroku repo"

`heroku create #{appname}`

log "Pushing to Heroku"

`git push heroku master`

`heroku open`